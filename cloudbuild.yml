---
steps:
- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  args:
  - '-eEuo'
  - 'pipefail'
  - '-c'
  - |-
    # Get list of directories to loop over
    array=(*/)
    for dir in "${array[@]}"; do
        # test for md5sum
        md5sum $dirDockerfile | cut -d ' ' -f1
        dockerfile_md5 = $(md5sum $dirDockerfile | cut -d ' ' -f1)
        echo "Checking for existing image for tool: $dir with Dockerfile md5 hash of: $dockerfile_md5"
    done
    # for loop: docker build {@dir}
        # if gcr.io/{PROJECT_ID}/image tag  == dockerfile hash
            # skip this build and continue
        #docker build -t gcr.io/${PROJECT_ID}/{directory name}:{dockerfile hash} -f {directory name}/Dockerfile .
        #docker push gcr.io/${PROJECT_ID}/{directory name}:{dockerfile hash}


# - name: 'gcr.io/cloud-builders/docker'
#  args:
#    - 'build'
#    - '--tag=gcr.io/${PROJECT_ID}/gobuster:latest'
#    - '--file=gobuster/Dockerfile'
#    - '.'
# - name: 'gcr.io/cloud-builders/docker'
#  args:
#    - 'build'
#    - '--tag=gcr.io/${PROJECT_ID}/tshark:latest'
#    - '--file=tshark/Dockerfile'
#    - '.'
# - name: 'gcr.io/cloud-builders/docker'
#   args:
#     - 'build'
#     - '--tag=gcr.io/${PROJECT_ID}/beef:latest'
#     - '--file=beef/Dockerfile'
#     - '.'
# - name: 'gcr.io/cloud-builders/docker'
#   args:
#     - 'build'
#     - '--tag=gcr.io/${PROJECT_ID}/beef:latest'
#     - '--file=beef/Dockerfile'
    # - '.'
#images:
    # - 'gcr.io/${PROJECT_ID}/gobuster:latest'
    # - 'gcr.io/${PROJECT_ID}/tshark:latest'
    # - 'gcr.io/${PROJECT_ID}/beef:latest'
